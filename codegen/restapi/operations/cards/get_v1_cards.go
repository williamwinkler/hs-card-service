// Code generated by go-swagger; DO NOT EDIT.

package cards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1CardsHandlerFunc turns a function with the right signature into a get v1 cards handler
type GetV1CardsHandlerFunc func(GetV1CardsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1CardsHandlerFunc) Handle(params GetV1CardsParams) middleware.Responder {
	return fn(params)
}

// GetV1CardsHandler interface for that can handle valid get v1 cards params
type GetV1CardsHandler interface {
	Handle(GetV1CardsParams) middleware.Responder
}

// NewGetV1Cards creates a new http.Handler for the get v1 cards operation
func NewGetV1Cards(ctx *middleware.Context, handler GetV1CardsHandler) *GetV1Cards {
	return &GetV1Cards{Context: ctx, Handler: handler}
}

/*
	GetV1Cards swagger:route GET /v1/cards cards getV1Cards

Returns cards as they are stored
*/
type GetV1Cards struct {
	Context *middleware.Context
	Handler GetV1CardsHandler
}

func (o *GetV1Cards) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetV1CardsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
