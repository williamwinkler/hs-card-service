// Code generated by go-swagger; DO NOT EDIT.

package cards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1RichcardsHandlerFunc turns a function with the right signature into a get v1 richcards handler
type GetV1RichcardsHandlerFunc func(GetV1RichcardsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1RichcardsHandlerFunc) Handle(params GetV1RichcardsParams) middleware.Responder {
	return fn(params)
}

// GetV1RichcardsHandler interface for that can handle valid get v1 richcards params
type GetV1RichcardsHandler interface {
	Handle(GetV1RichcardsParams) middleware.Responder
}

// NewGetV1Richcards creates a new http.Handler for the get v1 richcards operation
func NewGetV1Richcards(ctx *middleware.Context, handler GetV1RichcardsHandler) *GetV1Richcards {
	return &GetV1Richcards{Context: ctx, Handler: handler}
}

/*
	GetV1Richcards swagger:route GET /v1/richcards cards getV1Richcards

Rich cards contains names instead of ids of fx CardType "Minion", "Spell", "Secret" etc
*/
type GetV1Richcards struct {
	Context *middleware.Context
	Handler GetV1RichcardsHandler
}

func (o *GetV1Richcards) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetV1RichcardsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
