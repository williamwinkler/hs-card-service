// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetClassesHandlerFunc turns a function with the right signature into a get classes handler
type GetClassesHandlerFunc func(GetClassesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetClassesHandlerFunc) Handle(params GetClassesParams) middleware.Responder {
	return fn(params)
}

// GetClassesHandler interface for that can handle valid get classes params
type GetClassesHandler interface {
	Handle(GetClassesParams) middleware.Responder
}

// NewGetClasses creates a new http.Handler for the get classes operation
func NewGetClasses(ctx *middleware.Context, handler GetClassesHandler) *GetClasses {
	return &GetClasses{Context: ctx, Handler: handler}
}

/*
	GetClasses swagger:route GET /classes classes getClasses

Serves the different classes cards can have. Fx "Warlock" or "Neutral"
*/
type GetClasses struct {
	Context *middleware.Context
	Handler GetClassesHandler
}

func (o *GetClasses) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetClassesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
