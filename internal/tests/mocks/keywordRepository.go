// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/williamwinkler/hs-card-service/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// KeywordRepository is an autogenerated mock type for the KeywordRepository type
type KeywordRepository struct {
	mock.Mock
}

// DeleteAll provides a mock function with given fields:
func (_m *KeywordRepository) DeleteAll() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InsertMany provides a mock function with given fields: keywords
func (_m *KeywordRepository) InsertMany(keywords []domain.Keyword) error {
	ret := _m.Called(keywords)

	var r0 error
	if rf, ok := ret.Get(0).(func([]domain.Keyword) error); ok {
		r0 = rf(keywords)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewKeywordRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewKeywordRepository creates a new instance of KeywordRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewKeywordRepository(t mockConstructorTestingTNewKeywordRepository) *KeywordRepository {
	mock := &KeywordRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
