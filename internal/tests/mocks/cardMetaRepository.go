// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/williamwinkler/hs-card-service/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// UpdateMetaRepository is an autogenerated mock type for the UpdateMetaRepository type
type UpdateMetaRepository struct {
	mock.Mock
}

// FindNewest provides a mock function with given fields:
func (_m *UpdateMetaRepository) FindNewest() (domain.CardMeta, error) {
	ret := _m.Called()

	var r0 domain.CardMeta
	if rf, ok := ret.Get(0).(func() domain.CardMeta); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.CardMeta)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertOne provides a mock function with given fields: _a0
func (_m *UpdateMetaRepository) InsertOne(_a0 domain.CardMeta) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.CardMeta) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUpdateMetaRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewUpdateMetaRepository creates a new instance of UpdateMetaRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUpdateMetaRepository(t mockConstructorTestingTNewUpdateMetaRepository) *UpdateMetaRepository {
	mock := &UpdateMetaRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
